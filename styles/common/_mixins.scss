@mixin clearfix() {
  *zoom: 1;

  &::before,
  &::after {
    content: "";
    display: table;
  }

  &::after {
    clear: both;
  }
}

@mixin animation($animation...) {
  animation: $animation;
  -moz-animation: $animation;
  -webkit-animation: $animation;
  -o-border-animation: $animation;
}

@mixin animation-delay($delay...) {
  -o-animation-delay: $delay;
  -moz-animation-delay: $delay;
  -webkit-animation-delay: $delay;
  animation-delay: $delay;
}

@mixin inline-flexbox {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -moz-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
}

@mixin flexbox {
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
}

@mixin flexbox-center {
  @include flexbox;
  @include align-items(center);
  @include justify-content(center);
}

@mixin flexbox-important {
  display: -webkit-box !important;
  display: -webkit-flex !important;
  display: -moz-flex !important;
  display: -ms-flexbox !important;
  display: flex !important;
}

@mixin flex-direction($value: row) {
  @if $value==row-reverse {
    -webkit-box-direction: reverse;
    -webkit-box-orient: horizontal;
  }

  @else if $value==column {
    -webkit-box-direction: normal;
    -webkit-box-orient: vertical;
  }

  @else if $value==column-reverse {
    -webkit-box-direction: reverse;
    -webkit-box-orient: vertical;
  }

  @else {
    -webkit-box-direction: normal;
    -webkit-box-orient: horizontal;
  }

  -webkit-flex-direction: $value;
  -moz-flex-direction: $value;
  -ms-flex-direction: $value;
  flex-direction: $value;
}

@mixin flex-wrap($value: nowrap) {
  -webkit-flex-wrap: $value;
  -moz-flex-wrap: $value;

  @if $value==nowrap {
    -ms-flex-wrap: none;
  }

  @else {
    -ms-flex-wrap: $value;
  }

  flex-wrap: $value;
}

@mixin flex-flow($values: (row nowrap)) {
  -webkit-flex-flow: $values;
  -moz-flex-flow: $values;
  -ms-flex-flow: $values;
  flex-flow: $values;
}

@mixin order($int: 0) {
  -webkit-box-ordinal-group: $int + 1;
  -webkit-order: $int;
  -moz-order: $int;
  -ms-flex-order: $int;
  order: $int;
}

@mixin flex-grow($int: 0) {
  -webkit-box-flex: $int;
  -webkit-flex-grow: $int;
  -moz-flex-grow: $int;
  -ms-flex-positive: $int;
  flex-grow: $int;
}

@mixin flex-shrink($int: 1) {
  -webkit-flex-shrink: $int;
  -moz-flex-shrink: $int;
  -ms-flex-negative: $int;
  flex-shrink: $int;
}

@mixin flex-basis($value: auto) {
  -webkit-flex-basis: $value;
  -moz-flex-basis: $value;
  -ms-flex-preferred-size: $value;
  flex-basis: $value;
}

@mixin flex($fg: 1, $fs: null, $fb: null) {
  $fg-boxflex: $fg;

  @if type-of($fg)=='list' {
    $fg-boxflex: nth($fg, 1);
  }

  -webkit-box-flex: $fg-boxflex;
  -webkit-flex: $fg $fs $fb;
  -moz-box-flex: $fg-boxflex;
  -moz-flex: $fg $fs $fb;
  -ms-flex: $fg $fs $fb;
  flex: $fg $fs $fb;
}

@mixin justify-content($value: flex-start) {
  @if $value==flex-start {
    -webkit-box-pack: start;
    -ms-flex-pack: start;
  }

  @else if $value==flex-end {
    -webkit-box-pack: end;
    -ms-flex-pack: end;
  }

  @else if $value==space-between {
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
  }

  @else if $value==space-around {
    -ms-flex-pack: distribute;
  }

  @else {
    -webkit-box-pack: $value;
    -ms-flex-pack: $value;
  }

  -webkit-justify-content: $value;
  -moz-justify-content: $value;
  justify-content: $value;
}

@mixin align-items($value: stretch) {
  @if $value==flex-start {
    -webkit-box-align: start;
    -ms-flex-align: start;
  }

  @else if $value==flex-end {
    -webkit-box-align: end;
    -ms-flex-align: end;
  }

  @else {
    -webkit-box-align: $value;
    -ms-flex-align: $value;
  }

  -webkit-align-items: $value;
  -moz-align-items: $value;
  align-items: $value;
}

@mixin align-self($value: auto) {
  -webkit-align-self: $value;
  -moz-align-self: $value;

  @if $value==flex-start {
    -ms-flex-item-align: start;
  }

  @else if $value==flex-end {
    -ms-flex-item-align: end;
  }

  @else {
    -ms-flex-item-align: $value;
  }

  align-self: $value;
}

@mixin align-content($value: stretch) {
  -webkit-align-content: $value;
  -moz-align-content: $value;

  @if $value==flex-start {
    -ms-flex-line-pack: start;
  }

  @else if $value==flex-end {
    -ms-flex-line-pack: end;
  }

  @else {
    -ms-flex-line-pack: $value;
  }

  align-content: $value;
}

@mixin input-placeholder {
  &.placeholder {
    @content;
  }

  &:-moz-placeholder {
    @content;
  }

  &::-moz-placeholder {
    @content;
  }

  &:-ms-input-placeholder {
    @content;
  }

  &::-webkit-input-placeholder {
    @content;
  }
}

@mixin transform($transforms) {
  -moz-transform: $transforms;
  -o-transform: $transforms;
  -ms-transform: $transforms;
  -webkit-transform: $transforms;
  transform: $transforms;
}

@mixin transform-origin ($origin) {
  -webkit-transform-origin: $origin;
  -moz-transform-origin: $origin;
  -ms-transform-origin: $origin;
  transform-origin: $origin;
}

@mixin transition($transition...) {
  -moz-transition: $transition;
  -o-transition: $transition;
  -webkit-transition: $transition;
  transition: $transition;
}

@mixin transition-delay($delay) {
  -webkit-transition-delay: $delay;
  -o-transition-delay: $delay;
  transition-delay: $delay;
}

@mixin transition-property-1($property) {
  -webkit-transition-property: $property;
  -o-transition-property: $property;
  transition-property: $property;
}

@mixin transition-property-2($property1, $porperty2) {
  -webkit-transition-property: $property1, $porperty2;
  -o-transition-property: $property1, $porperty2;
  transition-property: $property1, $porperty2;
}

@mixin Animation($animation: $animation) {
  animation: $animation;
  -moz-animation: $animation;
  -webkit-animation: $animation;
  -o-border-animation: $animation;
}

@mixin AnimationDelayMixin($delay: $animationDelayValue) {
  -webkit-animation-delay: $delay;
  -moz-animation-delay: $delay;
  -o-animation-delay: $delay;
  -ms-animation-delay: $delay;
  animation-delay: $delay;
}

@mixin AnimationDelay($delay: $AnimationDelayValue) {
  @include AnimationDelayMixin($delay);
}

@mixin TransitionDelayMixin($delay: $transitionDelayValue) {
  -webkit-transition-delay: $delay;
  -moz-transition-delay: $delay;
  -o-transition-delay: $delay;
  -ms-transition-delay: $delay;
  transition-delay: $delay;
}

@mixin TransitionDelay($delay: $transitionDelayValue) {
  @include TransitionDelayMixin($delay);
}

@mixin KeyFrames($name) {
  @-webkit-keyframes #{$name} {
    @content;
  }

  @-moz-keyframes #{$name} {
    @content;
  }

  @-ms-keyframes #{$name} {
    @content;
  }

  @keyframes #{$name} {
    @content;
  }
}

@mixin linear-gradient-two($direction, $color_one, $color_two) {
  background: -o-linear-gradient($direction, $color_one, $color_two);
  background: -moz-linear-gradient($direction, $color_one, $color_two);
  background: -webkit-linear-gradient($direction, $color_one, $color_two);
}

@mixin linear-gradient-four($direction, $color_one, $color_two, $color_three, $color_four) {
  background: -o-linear-gradient($direction, $color_one, $color_two, $color_three, $color_four);
  background: -moz-linear-gradient($direction, $color_one, $color_two, $color_three, $color_four);
  background: -webkit-linear-gradient($direction, $color_one, $color_two, $color_three, $color_four);
}

@mixin perspective($perspective) {
  -webkit-perspective: $perspective;
  perspective: $perspective;
}

@mixin inline-flex() {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
}

@mixin abs-center() {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  margin: auto;
}